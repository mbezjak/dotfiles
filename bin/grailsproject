#!/usr/bin/env python2
# coding: utf-8

import re, codecs, collections
from os import path
from glob import glob
from operator import itemgetter

app = collections.defaultdict(lambda : '')
plugins = []

def put(key, value):
    if value is not None: app.setdefault(key, value)

def add_plugins(pattern, text):
    if text is not None: plugins.extend(re.findall(pattern, text))

def pluginstr():
    punique = list(set(plugins))
    psorted = sorted(punique, key=itemgetter(0))
    pstr = ['plugin {0:15s} {1}'.format(*p) for p in psorted]
    return '\n\n' + '\n'.join(pstr) if pstr else ''

def appstr():
    plugin = app['project'] and app['pluginfile'] is not None
    app['plugin'] = str(plugin).lower()
    app['project'] = str(app['project']).lower()
    return """
project   {0[project]}
plugin    {0[plugin]} {0[pluginfile]}
name      {0[name]}
directory {0[directory]}
version   {0[version]}
grails    {0[grails]}
""".strip().format(app) #format(**app) won't work when key isn't defined

def text(name):
    if not name: return None
    if not path.exists(name): return None
    f = codecs.open(name, 'r', 'utf8')
    return f.read().replace("'", '"') if f else None

def find_group(pattern, original):
    if not original: return None
    m = re.search(pattern, original)
    return m.group(1) if m else None

build_config_text = text('grails-app/conf/BuildConfig.groovy')
app_text          = text('application.properties')

put('project', build_config_text is not None)
put('directory', path.basename(path.abspath('.')))

if app['project']:
    descriptors = glob('*GrailsPlugin.groovy')
    put('pluginfile', descriptors[0] if descriptors else None)
    plugin_text = text(app['pluginfile'])
    put('version', find_group(r'def version\s*=\s*"(.+?)"', plugin_text))

    search_plugins_block = re.compile(r'plugins\s*\{(.+?)\}',
                                      re.MULTILINE | re.DOTALL)
    pblock = find_group(search_plugins_block, build_config_text)
    add_plugins(r'".*?:(.+?):(.+?)"', pblock)

    put('name', find_group(r'app.name=(.+)', app_text))
    put('version', find_group(r'app.version=(.+)', app_text))
    put('grails', find_group(r'app.grails.version=(.+)', app_text))
    add_plugins(r'plugins.(.+?)=(.+)', app_text)

print appstr() + pluginstr()
